---
import { getCollection } from 'astro:content';
import Button from '../components/Button.astro';
import Hero from '../components/Hero.astro';
import PostPreview from '../components/PostPreview.astro';
import ProjectPreview from '../components/ProjectPreview.astro';
import { Content as FixedText } from '../content/pages/home.md';
import siteConfig from '../data/site-config';
import BaseLayout from '../layouts/BaseLayout.astro';
import { sortItemsByDateDesc } from '../utils/data-utils';

const allPosts = (await getCollection('blog')).sort(sortItemsByDateDesc);
const allProjects = (await getCollection('projects')).sort(sortItemsByDateDesc);

// Get featured items
const featuredPosts = allPosts.filter(({ data }) => data.isFeatured);
const featuredProjects = allProjects.filter(({ data }) => data.isFeatured);

// Get slugs of featured posts to avoid duplication
const featuredPostSlugs = new Set(featuredPosts.map((post) => post.slug));

// Get latest posts, EXCLUDING those already featured
// This prevents displaying a post as both featured and latest
const latestNonFeaturedPosts = allPosts
    .filter((post) => !featuredPostSlugs.has(post.slug)) // Exclude featured posts
    .slice(0, 3); // Take the top 3 *remaining* latest posts

const featuredProjectSlugs = new Set(featuredProjects.map((project) => project.slug));
const latestNonFeaturedProjects = allProjects.filter((project) => !featuredProjectSlugs.has(project.slug)).slice(0, 3);
---

<BaseLayout description={siteConfig.description} image={siteConfig.image}>
    <Hero />
    <div class="mb-16 sm:mb-24">
        <h2 class="mb-12 text-xl font-serif italic sm:mb-16 sm:text-2xl">Welcome</h2>
        <FixedText />
        <div class="mt-12 sm:mt-16">
            <Button href="/contact">Get in touch</Button>
        </div>
    </div>
    {
        (featuredProjects?.length > 0 || latestNonFeaturedProjects.length > 0) && (
            <div class="mb-16 sm:mb-24">
                <h2 class="mb-12 text-xl font-serif italic sm:mb-16 sm:text-2xl">Projects</h2>
                {featuredProjects.map((project) => (
                    <ProjectPreview project={project} class="mb-10 sm:mb-12" headingLevel="h3" />
                ))}
                {latestNonFeaturedProjects.map((project) => (
                    <ProjectPreview project={project} class="mb-10 sm:mb-12" headingLevel="h3" />
                ))}
                <div class="mt-12 sm:mt-16">
                    <Button href="/projects">View All Projects</Button>
                </div>
            </div>
        )
    }
    {
        (featuredPosts?.length > 0 || latestNonFeaturedPosts?.length > 0) && (
            <div class="mb-16 sm:mb-24">
                <h2 class="mb-12 text-xl font-serif italic sm:mb-16 sm:text-2xl">Writing</h2>
                {featuredPosts.map((post) => (
                    <PostPreview post={post} class="mb-10 sm:mb-12" headingLevel="h3" />
                ))}
                {latestNonFeaturedPosts.map((post) => (
                    <PostPreview post={post} class="mb-10 sm:mb-12" headingLevel="h3" />
                ))}

                <div class="mt-12 sm:mt-16">
                    <Button href="/blog">View All Posts</Button>
                </div>
            </div>
        )
    }
</BaseLayout>
